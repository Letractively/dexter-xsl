dexterity.namespace=dx
dexterity.descriptors=ignore,ghost,env,uniq,sub,if,case,each,ccpy,value,\
	attr,attrs,cattr,cattrs

# block descriptors are mildly exceptional and must be tagged as such
# an optional end-block attribute may be specified
dexterity.block=case
dexterity.block.case=default

# associate attributes with implementing classes
dexterity.a.ghost=org.dykman.dexter.dexterity.GhostDescriptor
dexterity.a.ignore=org.dykman.dexter.dexterity.NullDescriptor
dexterity.a.if=org.dykman.dexter.dexterity.TestDescriptor
dexterity.a.case=org.dykman.dexter.dexterity.CaseDescriptor
dexterity.a.env=org.dykman.dexter.dexterity.EnvDescriptor
dexterity.a.each=org.dykman.dexter.dexterity.SelectDescriptor
dexterity.a.value=org.dykman.dexter.dexterity.MapNodeDescriptor
dexterity.a.ccpy=org.dykman.dexter.dexterity.CopyChildDescriptor
dexterity.a.cpy=org.dykman.dexter.dexterity.CopyNodeDescriptor
dexterity.a.sub=org.dykman.dexter.dexterity.SubdocDescriptor
dexterity.a.uniq=org.dykman.dexter.dexterity.UniqAttrDescriptor

dexterity.a.attr=org.dykman.dexter.dexterity.MapAttributeDescriptor
dexterity.a.attrs=org.dykman.dexter.dexterity.MapAttributeDescriptorS
dexterity.a.cattr=org.dykman.dexter.dexterity.ConditionalAttributeDescriptor
dexterity.a.cattrs=org.dykman.dexter.dexterity.ConditionalAttributeDescriptorS

# NameFuction implements PathFunction but is no longer in use 
# dexterity.macro.class.sample=org.dykman.dexter.base.NameFunction
