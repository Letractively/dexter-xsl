# the prefix will be applied to all dexter attribute names before scanning
dexter.prefix=xpl

# in the absence of schema or DTD validation, specify id attributes
dexter.node.id=id,ID

#specify the parse sequence.. list order specifies precedence
#editors are run first
dexter.editors=ajax,meta
#then the descriptors
dexter.descriptors=ignore,env,uniq,sub,if,case,each,ccpy,value,attr,\
		target,ghost,data

# block descriptors are mildly exceptional and must be tagged as such
# an optional end-block attribute may be specified
dexter.block=case
dexter.block.case=default

# associate attributes with implementing classes

# dexterity
dexter.a.ghost=org.dykman.dexter.dexterity.GhostDescriptor
dexter.a.ignore=org.dykman.dexter.dexterity.NullDescriptor
dexter.a.if=org.dykman.dexter.dexterity.TestDescriptor
dexter.a.case=org.dykman.dexter.dexterity.CaseDescriptor
dexter.a.env=org.dykman.dexter.dexterity.EnvDescriptor
dexter.a.each=org.dykman.dexter.dexterity.SelectDescriptor
dexter.a.attr=org.dykman.dexter.dexterity.MapAttributeDescriptor
dexter.a.value=org.dykman.dexter.dexterity.MapNodeDescriptor
dexter.a.ccpy=org.dykman.dexter.dexterity.CopyNodeDescriptor
dexter.a.sub=org.dykman.dexter.dexterity.SubdocDescriptor
dexter.a.uniq=org.dykman.dexter.dexterity.UniqAttrDescriptor

# didi
dexter.a.ajax=org.dykman.dexter.didi.AjaxAnchorEditor
dexter.a.target=org.dykman.dexter.didi.AjaxCallerDescriptor
dexter.a.meta=org.dykman.dexter.didi.MetaTagEditor
dexter.a.data=org.dykman.dexter.didi.JSParamDescriptor

dexter.didi.data=jsdata


#simple path functions
dexterity.macro.def.cmp-name=local-name($path)="$arg"
dexterity.macro.def.name=local-name($path)
dexterity.macro.def.text=$path/text()
dexterity.macro.def.istext=$path/self::text()
dexterity.macro.def.trim=normalize-space($path)
dexterity.macro.def.count=count($path)
dexterity.macro.def.pos=position()

# NameFuction implements PathFunction but is no longer in use 
# dexterity.macro.class.sample=org.dykman.dexter.base.NameFunction
