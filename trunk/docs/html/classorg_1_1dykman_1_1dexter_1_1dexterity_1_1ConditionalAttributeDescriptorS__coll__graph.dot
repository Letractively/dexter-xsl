digraph G
{
  bgcolor="transparent";
  edge [fontname="FreeSans",fontsize=10,labelfontname="FreeSans",labelfontsize=10];
  node [fontname="FreeSans",fontsize=10,shape=record];
  Node1 [label="{org.dykman.dexter.dexterity.ConditionalAttributeDescriptorS\n||+ ConditionalAttributeDescriptorS()\l# getTests()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node2 [label="{org.dykman.dexter.dexterity.ConditionalAttributeDescriptor\n||+ ConditionalAttributeDescriptor()\l+ attributes()\l}",height=0.2,width=0.4,color="black",URL="$classorg_1_1dykman_1_1dexter_1_1dexterity_1_1ConditionalAttributeDescriptor.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node3 [label="{org.dykman.dexter.dexterity.AbstractAttributeDescriptor\n||+ AbstractAttributeDescriptor()\l}",height=0.2,width=0.4,color="black",URL="$classorg_1_1dykman_1_1dexter_1_1dexterity_1_1AbstractAttributeDescriptor.html"];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node4 [label="{org.dykman.dexter.descriptor.PathDescriptor\n||+ PathDescriptor()\l+ onScan()\l+ setPath()\l+ getIteratorContext()\l+ setIteratorContext()\l+ getPath()\l+ mapPaths()\l+ mapPath()\l+ nextOf()\l+ getPath()\l+ mapPaths()\l+ mapPath()\l+ dequalify()\l# getTests()\l# valueTemplateParams()\l}",height=0.2,width=0.4,color="black",URL="$classorg_1_1dykman_1_1dexter_1_1descriptor_1_1PathDescriptor.html"];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node5 [label="{org.dykman.dexter.descriptor.NodeTransformDescriptor\n|# element\l# name\l# value\l|+ NodeTransformDescriptor()\l+ setArgs()\l# normalizeWhitespace()\l}",height=0.2,width=0.4,color="black",URL="$classorg_1_1dykman_1_1dexter_1_1descriptor_1_1NodeTransformDescriptor.html"];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node6 [label="{org.dykman.dexter.descriptor.MetaDescriptor\n|- meta\l- NULL_STRING_TRIED\l|+ MetaDescriptor()\l+ end()\l+ getMeta()\l+ setMeta()\l# getMeta()\l# setMeta()\l}",height=0.2,width=0.4,color="black",URL="$classorg_1_1dykman_1_1dexter_1_1descriptor_1_1MetaDescriptor.html"];
  Node7 -> Node6 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node7 [label="{org.dykman.dexter.descriptor.TransformDescriptor\n|# sequencer\l# inner\l# applyToChildren\l|+ TransformDescriptor()\l+ onScan()\l+ beforeNode()\l+ afterNode()\l+ getChildDescriptors()\l+ attributes()\l+ appendChild()\l+ start()\l+ children()\l+ end()\l+ setTransformSequencer()\l}",height=0.2,width=0.4,color="black",URL="$classorg_1_1dykman_1_1dexter_1_1descriptor_1_1TransformDescriptor.html"];
  Node8 -> Node7 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node8 [label="{org.dykman.dexter.descriptor.AbstractDescriptor\n|# children\l# sequencer\l# propertyResolver\l|+ AbstractDescriptor()\l+ setPropertyResolver()\l+ getChildDescriptors()\l+ appendChild()\l+ setTransformSequencer()\l}",height=0.2,width=0.4,color="black",URL="$classorg_1_1dykman_1_1dexter_1_1descriptor_1_1AbstractDescriptor.html"];
  Node9 -> Node8 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans"];
  Node9 [label="{org.dykman.dexter.descriptor.Descriptor\n||+ setTransformSequencer()\l+ getChildDescriptors()\l+ appendChild()\l+ setPropertyResolver()\l+ start()\l+ attributes()\l+ children()\l+ end()\l}",height=0.2,width=0.4,color="black",URL="$interfaceorg_1_1dykman_1_1dexter_1_1descriptor_1_1Descriptor.html"];
  Node10 -> Node8 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="propertyResolver",arrowtail="open",fontname="FreeSans"];
  Node10 [label="{org.dykman.dexter.base.PropertyResolver\n||+ getProperty()\l+ getProperty()\l+ setProperty()\l+ getPropertiesMatching()\l}",height=0.2,width=0.4,color="black",URL="$interfaceorg_1_1dykman_1_1dexter_1_1base_1_1PropertyResolver.html"];
  Node11 -> Node8 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="sequencer",arrowtail="open",fontname="FreeSans"];
  Node11 [label="{org.dykman.dexter.base.TransformSequencer\n||+ setDocType()\l+ runDescriptor()\l+ getCurrentNode()\l+ translateXSLPath()\l+ setIdNames()\l+ textContainer()\l+ startNode()\l+ endNode()\l+ mapAttribute()\l+ mapNode()\l+ copyNodes()\l+ startSubdoc()\l+ endSubdoc()\l+ setAttribute()\l+ setIdentityAttribute()\l+ setMeta()\l+ getMeta()\l+ startIterator()\l+ endIterator()\l+ startCaseBlock()\l+ endCaseBlock()\l+ startCase()\l+ endCase()\l+ startTest()\l+ endTest()\l+ appendText()\l+ appendText()\l}",height=0.2,width=0.4,color="black",URL="$interfaceorg_1_1dykman_1_1dexter_1_1base_1_1TransformSequencer.html"];
  Node12 -> Node8 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="children",arrowtail="open",fontname="FreeSans"];
  Node12 [label="{List\< Descriptor \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node11 -> Node7 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="sequencer",arrowtail="open",fontname="FreeSans"];
  Node9 -> Node7 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="inner",arrowtail="open",fontname="FreeSans"];
  Node13 -> Node7 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="applyToChildren",arrowtail="open",fontname="FreeSans"];
  Node13 [label="{boolean\n||}",height=0.2,width=0.4,color="grey75"];
  Node14 -> Node6 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="NULL_STRING_TRIED",arrowtail="open",fontname="FreeSans"];
  Node14 [label="{String\n||}",height=0.2,width=0.4,color="grey75"];
  Node15 -> Node6 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="meta",arrowtail="open",fontname="FreeSans"];
  Node15 [label="{Map\< String, String \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node14 -> Node5 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="value\nname",arrowtail="open",fontname="FreeSans"];
  Node16 -> Node5 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="element",arrowtail="open",fontname="FreeSans"];
  Node16 [label="{Element\n||}",height=0.2,width=0.4,color="grey75"];
}
